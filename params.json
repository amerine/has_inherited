{"name":"has_inherited","body":"## has_inherited\r\n\r\nEasily share variables between Rails models with inheritance.\r\n\r\n### Installation\r\n\r\n`âžœ  ~  gem install has_inherited`\r\n\r\n### Using has_inheritable\r\n\r\n(*NOTE*: has_inherited 2.x or greater only works with Rails 3. If you need Rails 2.x support please use has_inherited 1.0)\r\nThe intention of this library is to make it easy to inherit particular variables between models in rails apps. We start with a parent model that will function as a pseudo-polymorphic association for children objects.\r\n\r\n### 1. Define a parent object\r\n\r\n```\r\nclass Seo < ActiveRecord::Base\r\n  is_inheritable\r\nend\r\n```\r\n\r\nUse the following as a migration guideline. *Note:* The table structure is important.\r\n\r\n```\r\ncreate_table :seos do |t|\r\n  t.integer :inheritable_id\r\n  t.string  :inheritable_type\r\n  t.string  :name, :limit => 50, :null => false\r\n  t.string  :value\r\n  t.string  :value_type\r\nend\r\n```\r\n\r\n### 2. Define child objects. \r\n\r\n```\r\nclass Industry < ActiveRecord::Base\r\n  has_inherited :seo, :from => Seo\r\n  has_many :clients\r\nend\r\n```\r\n\r\nThis gives industry instances access to the seo namespace from the Seo object. In this case it will end up being `industry.seo.X`\r\n\r\n```\r\nclass Client < ActiveRecord::Base\r\n  belongs_to :industry\r\n  has_many :stores\r\n  has_inherited :seo, :from => [:industry, :seo], :inherit_class => 'Seo'\r\nend\r\n```\r\n\r\nThis gives client instances access to the seo namespace from its associated industry. You also have to specify the `:inherit_class` so we know what table to look up. \r\n\r\n### Examples\r\n\r\n```\r\n#Set the SEO global title\r\n#Seo.global.title = \"SEO Title\"\r\n\r\n#Grab that child industry title\r\nindustry.seo.title\r\n# => 'SEO Title'\r\n\r\n#Grab the client title\r\nclient.seo.title\r\n# => 'SEO Title'\r\n\r\n#Change the industry title\r\nindustry.seo.title = 'Industry Title'\r\n\r\n#Check the client\r\nclient.seo.title\r\n# => 'Industry Title'\r\n\r\n#Grab all the Keys for the client\r\nclient.seo.all\r\n# => {:title=>\"Industry Title\"}\r\n\r\n#Grab all the non-inherited keys from the client\r\nclient.seo.all(false)\r\n# => {}\r\n```\r\n\r\n### Note on Patches/Pull Requests\r\n \r\n* Fork the project.\r\n* Make your feature addition or bug fix.\r\n* Add tests for it. This is important so I don't break it in a\r\n  future version unintentionally.\r\n* Commit, do not mess with rakefile, version, or history.\r\n  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)\r\n* Send me a pull request. Bonus points for topic branches.\r\n\r\n### Copyright\r\n\r\nCopyright (c) 2010 Mark Turner. See LICENSE for details.","tagline":"Easily share variables between Rails models with inheritance.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}